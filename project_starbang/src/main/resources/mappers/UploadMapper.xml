<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UploadMapper">

	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="uploadMap"
		type="project.star.b2.model.UploadItem">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="imageno" column="imageno" />
		<result property="fieldName" column="fieldName" />
		<result property="originName" column="originName" />
		<result property="filePath" column="filePath" />
		<result property="contentType" column="contentType" />
		<result property="fileSize" column="fileSize" />
		<result property="fileName" column="fileName" />
		<result property="regDate" column="regDate" />
		<result property="editDate" column="editDate" />
		<result property="roomno" column="roomno" />
		<result property="thumbnail" column="thumbnail" />		
	</resultMap>

	<!-- 단일행 조회를 위한 기능 정의 -->
	<select id="selectItem"
		parameterType="project.star.b2.model.UploadItem" resultMap="uploadMap">
		SELECT
		thumbnail, fieldName, originName, filePath, contentType,
		fileSize,fileName,regDate,editDate,roomno
		FROM image
		WHERE imageno=#{imageno};
	</select>
	
	<!-- 다중행 조회를 위한 기능 정의 -->
	<select id="selectList_by_roomno"
		parameterType="project.star.b2.model.UploadItem" resultMap="uploadMap">
		SELECT imageno, roomno, fieldName, originName, filePath, contentType, fileSize,fileName,regDate,editDate,thumbnail
		FROM image
		where roomno = #{roomno};
	</select>

	<!-- 다중행 조회를 위한 기능 정의 -->
	<select id="selectList"
		parameterType="project.star.b2.model.UploadItem" resultMap="uploadMap">
		SELECT imageno, fieldName, originName, filePath, contentType,
		fileSize,fileName,regDate,editDate,roomno, thumbnail
		FROM image
		ORDER BY imageno ASC
	</select>
	

	<!-- 조건에 맞는 데이터 수를 집계하여 int 타입으로 반환한다. 
		count, max, min, sum, avg 함수를 사용한 경우 Mapper에서는 resultMap이 아닌 resultType으로 반환한다. -->
	<select id="selectCountAll"
		parameterType="project.star.b2.model.UploadItem" resultType="int">
		SELECT COUNT(*) FROM image
	</select>

	<!-- 마지막 PRI값 조회를 위한 기능 -->
	<select id="selectMaxItem"
		parameterType="project.star.b2.model.UploadItem" resultType="int">
		SELECT MAX(imageno) FROM image
	</select>
	
	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem"
		parameterType="project.star.b2.model.UploadItem"
		useGeneratedKeys="true" keyProperty="imageno">
		INSERT INTO image (
		fieldName, originName, filePath, contentType, fileSize, fileName, regDate, editDate, roomno, thumbnail
		) VALUES (
		#{fieldName}, #{originName}, #{filePath}, #{contentType}, #{fileSize}, #{fileName}, now(), now(), #{roomno}, #{thumbnail}
		);
	</insert>

	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem"
		parameterType="project.star.b2.model.UploadItem">
		DELETE FROM image WHERE roomno=#{roomno};
	</delete>

	<!-- imageno에 의해 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem_by_imageno"
		parameterType="project.star.b2.model.UploadItem">
		DELETE FROM image WHERE imageno=#{imageno};
	</delete>

	<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id="updateItem"
		parameterType="project.star.b2.model.UploadItem">
		UPDATE image SET
            fieldName=#{fieldName}, originName=#{originName}, filePath=#{filePath},
            contentType=#{contentType}, fileSize=#{fileSize}, fileName=#{fileName}, editDate=#{now()}, thumbnail=#{thumbnail}
        WHERE imageno=#{imageno}
	</update>

</mapper>